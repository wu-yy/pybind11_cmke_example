//
// Created by wuyongyu on 2020/5/24.
//

#include <dlfcn.h>
#include "core.h"
#include "pyjt/py_obj_holder.h"
#include "init.h"
#include "log/log.h"
#include "pyjt/py_converter.h"
#include "pyjt/py_arg_printer.h"
#include "common.h"
#include "misc/hash.h"

namespace leetcode {
// Those function is generated by python
 extern void pyjt_def_all(PyObject* m);
}

//static void init_module(PyModuleDef* mdef, PyObject* m) {
//    mdef->m_doc = "Inner c++ core of leetcode";
//    //  (1)init default_random_engine
//    //
//    //   (2)init fused op op_registe({"fused","",""});
//
//    //   (3)init_cuda_devices();
//    leetcode::init();
//    leetcode::pyjt_def_all(m);
//}
//PYJF_MODULE_INIT(leetcode_core);




// test function
//static PyObject test_function(PyObject self)
//{
//    PyObject_Print(self, stdout, 0);
//    printf("lc_hello_world test\n");
//    Py_INCREF(Py_True);
//    return Py_True;
//}
//
//static PyObject add_function(PyObject self, PyObject args)
//{
//    int num1, num2;
//    PyObject result=NULL;
//    if (!PyArg_ParseTuple(args, "nn", &num1, &num2)) {
//        printf("传入参数错误！\n");
//        return NULL;
//    }
//    result = PyLong_FromLong(num1+num2);
//    return result;
//}

//static PyObject* say_hello(PyObject* self, PyObject* args) {
//    const char* name;
//    if (!PyArg_ParseTuple(args, "s", &name))
//        return NULL;
//
//    printf("Hello %s!\n", name);
//
//    Py_RETURN_NONE;
//}

static void init_module_test(PyModuleDef* mdef, PyObject* m) {
    mdef->m_doc = "Inner c++ core of leetcode test";
//    leetcode::init();
    static PyMethodDef methods[] = {
//            {"test", (PyCFunction)test_function, METH_NOARGS, "lc_hello_world extending test"},
//            {"hello", (PyCFunction)say_hello, METH_VARARGS, NULL},
            {NULL, NULL, 0, NULL}
    };
    ASSERT(PyModule_AddFunctions(m, methods)==0);
}

PYJF_MODULE_INIT_TEST(leetcode_core);